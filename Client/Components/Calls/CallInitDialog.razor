@using BlazorChat.Client.Services
@inject Services.ICallService Calls
@inject Services.IChatApiService Api
@inject IStringLocalizer<Pages.Chat> Loc
@inject Services.IDialogCloseService DialogCloseHelper

<MudDialog>
    <TitleContent>
        <MudText Typo=@(Typo.h6)>@(string.Format(Loc["cinit_title"], RemoteUser?.Name ?? "?"))</MudText>
    </TitleContent>
    <DialogContent>
        @if (!_devicesLoaded)
        {
            if (string.IsNullOrEmpty(_errorMessage))
            {
                <MudProgressCircular Indeterminate=true></MudProgressCircular>
            }
            else
            {
                <MudText Typo=@(Typo.body1) Color=@(Color.Error)>@(_errorMessage)</MudText>
            }
        }
        else if (_videoInputs.Length > 0 || _audioInputs.Length > 0)
        {
            @if (_videoInputs.Length > 1)
            {
                <MudSelect T="Device" @bind-Value=_videoDevice Label=@(Loc["cinit_selectvideo"]) Placeholder=@(Loc["cinit_disabled"])>
                    <MudSelectItem T=Device Value=null>@(Loc["cinit_disabled"])</MudSelectItem>
                    @foreach (var device in _videoInputs)
                    {
                        <MudSelectItem T=Device Value=device>@(device.Label)</MudSelectItem>
                    }
                </MudSelect>
            }
            else if (_videoInputs.Length == 1)
            {
                <MudSwitch T=bool
                   Checked=@(_videoDevice != null)
                   CheckedChanged=@((v) => _videoDevice = v ? _videoInputs.First() : null)>
                    @(_videoInputs.First().Label)
                </MudSwitch>
            }
            @if (_audioInputs.Length > 1)
            {
                <MudSelect T="Device" @bind-Value=_audioDevice Label=@(Loc["cinit_selectaudio"]) Placeholder=@(Loc["cinit_disabled"])>
                    <MudSelectItem T=Device Value=null>@(Loc["cinit_disabled"])</MudSelectItem>
                    @foreach (var device in _audioInputs)
                    {
                        <MudSelectItem T=Device Value=device>@(device.Label)</MudSelectItem>
                    }
                </MudSelect>
            }
            else if (_audioInputs.Length == 1)
            {
                <MudSwitch T=bool
                   Checked=@(_audioDevice != null)
                   CheckedChanged=@((v) => _audioDevice = v ? _audioInputs.First() : null)>
                    @(_audioInputs.First().Label)
                </MudSwitch>
            }            
        }
        else
        {
            <MudText Color=@(Color.Warning)>@(_errorMessage)</MudText>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick=onCancel>@(_cancelString)</MudButton>
        @* Disabled=@(__videoDevice == null && __audioDevice == null) *@
        <MudButton StartIcon=@(Icons.Filled.Call) OnClick=onAccept>@(_acceptString)</MudButton>
    </DialogActions>
</MudDialog>