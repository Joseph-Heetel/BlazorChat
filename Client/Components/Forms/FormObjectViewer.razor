@if (Schema != null)
{
    <MudTooltip Text=@(Schema.Description)>
        @if (DisplayAlways)
        {
            <MudText Typo="Typo.h6" Style="font-size: 1.25em">
                <span>@(_title)</span>
                @if (Schema.IsOptional)
                {
                    <span class="optional"> (optional)</span>
                }
                else
                {
                    <span class="required">*</span>
                }
            </MudText>
        }
        else
        {
            <MudButton StartIcon=@(_buttonIcon) OnClick=@(() => _display = !_display)>
                <MudText Typo="Typo.h6" Style="font-size: 1.25em">
                    <span>@(_title)</span>
                    @if (Schema.IsOptional)
                    {
                        <span class="optional"> (optional)</span>
                    }
                    else
                    {
                        <span class="required">*</span>
                    }
                </MudText>
            </MudButton>
        }
    </MudTooltip>
    @if (_display || DisplayAlways)
    {
        <MudCard Elevation=8>
            <MudCardContent Class="formscontainer">
                @foreach (var property in Schema.Properties)
                {
                    if (property.Value.Properties.Count > 0)
                    {
                        <FormObjectViewer Schema=@(property.Value) Form=@(Form?[property.Key]) />
                    }
                    else if (hasEnumConstraint(property.Value))
                    {
                        <EnumFormValue Schema=@(property.Value) />
                    }
                    else if (hasTypeConstraint(property.Value, ESchemaValueKind.String))
                    {
                        <StringFormValue Schema=@(property.Value) />
                    }
                    else if (hasTypeConstraint(property.Value, ESchemaValueKind.Integer, ESchemaValueKind.Number))
                    {
                        <NumberFormValue Schema=@(property.Value) />
                    }
                    else if (hasTypeConstraint(property.Value, ESchemaValueKind.Boolean))
                    {
                        <BooleanFormValue Schema=@(property.Value) />
                    }
                    else
                    {
                        <MudText Color=@(Color.Warning)>Unable to render: @(property.Value.Title) [@(property.Key)]</MudText>
                    }
                }
            </MudCardContent>
        </MudCard>
    }
}
