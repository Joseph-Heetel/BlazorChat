@using System.Text.Json
@using BlazorChat.Client.Services
@inject IChatApiService Api
@inject IHttpClientFactory ClientFactory
@inject NavigationManager Nav

@* Style="width: 80%; max-width: 80%; height: 90%; max-height: 90%;" ClassContent="formscontainer" *@

@* Style=@($"width: 100%; height: 100%; max-width: unset; background-color: rgba(0, 0, 0, 65%); border-radius: unset") Class="enlargedialogchild" ContentStyle="width: 100%; height: 100%; padding: unset" *@

<MudDialog>
    <TitleContent></TitleContent>
    <DialogContent>
        @switch (_state)
        {
            case EState.Editing:
                <CascadingValue Value=@(_formRoot)>
                    <div class="formviewroot">
                        <FormObjectViewer Schema=_schema Form=_formRoot DisplayAlways=true />
                    </div>
                </CascadingValue>
                @if (!_validation.IsSuccess)
                {
                    <MudText Color=@(Color.Error)>Unable to submit: @(_errors)</MudText>
                }
                break;
            case EState.Submitted:
                <MudText>Form Submitted</MudText>
                break;
            case EState.Fetching:
            case EState.Uploading:
                <MudProgressCircular Indeterminate />
                break;
        }

    </DialogContent>
    <DialogActions>
        <MudButton Color=@(Color.Primary) Variant=@(Variant.Filled) OnClick=@(Submit)>Submit</MudButton>
        <MudButton Variant=@(Variant.Filled) OnClick=@(Close)>Close</MudButton>
    </DialogActions>
</MudDialog>




