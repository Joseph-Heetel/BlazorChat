@using BlazorChat.Client.Components.Forms
@using BlazorChat.Client.Services
@using BlazorChat.Shared
@inject IChatStateService ChatStateService
@inject IChatApiService ChatApiService
@inject IMediaResolverService MediaResolver
@inject IDialogService _dialogService
@inject IStringLocalizer<Pages.Chat> Loc

@* This component displays a single message *@

<div class="messagecontainer @(_alignRight ? "alignright" : "alignleft")" id=@(Params.Message.Id)>
    @if (Params.ShowAuthor)
    {
        <UserView Params=@(_authorViewParams) />
    }
    <MudCard Elevation=1 Style="width:fit-content; min-width: 18em; max-width: 70%" Class=@(_cardClass)>
        <MudCardHeader>
            <CardHeaderContent>
                <div class="row_container" style="align-content: stretch; gap: 0.3em">
                    @if (_pending)
                    {
                        <MudIcon Icon=@(Icons.Filled.Sync) Size=@(Size.Small) />
                    }
                    else if (Params.TotalCount == Params.ReadCount)
                    {
                        <MudIcon Icon=@(Icons.Filled.DoneAll) Size=@(Size.Small) />
                    }
                    @if (!_pending)
                    {
                        <MudText Typo=@(Typo.caption) Style="flex: 0 1 100%">@(_timedisplay)</MudText>
                    }
                </div>
            </CardHeaderContent>
            <CardHeaderActions>
                @if (_text.Length > 0 && Params.Message.AuthorId != Params.SelfUserId)
                {
                    <MudIconButton Icon=@(Icons.Filled.Translate) OnClick=@(translate) />
                }
                @if (!string.IsNullOrEmpty(_attachmentUrl))
                {
                    <MudIconButton Icon=@(Icons.Filled.Download) Link=@(_attachmentUrl)></MudIconButton>
                }
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent Style="padding-top: 4px" Class="column_container">
            @foreach (string text in _text)
            {
                <MudText Style="align-self: start" Typo=@(Typo.body1)>@(text)</MudText>
            }
            @if (!_formRequestId.IsZero)
            {
                <MessageFormViewer FormRequestId=_formRequestId />
            }
            @if (_hasAttachment)
            {
                @if (string.IsNullOrEmpty(_attachmentUrl))
                {
                    <MudProgressCircular Indeterminate=true />
                }
                else if (_attachmentIsImage)
                {
                    <MudButton OnClick=@(viewImage)>
                        <MudImage Src=@(_attachmentUrl) Fluid=true></MudImage>
                    </MudButton>
                }
                else
                {
                    <MudText Typo=@(Typo.body1)><MudIcon Icon=@(Icons.Filled.FileOpen)></MudIcon> @(Path.GetFileName(_attachmentUrl))</MudText>
                }
            }


        </MudCardContent>
    </MudCard>

</div>