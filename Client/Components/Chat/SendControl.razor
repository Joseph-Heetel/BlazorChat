@inject ISnackbar _Snackbar
@inject Services.IChatApiService ChatApiService
@inject Services.IChatStateService ChatStateService
@inject Services.IMessageDispatchService _messageDispatcher
@inject IStringLocalizer<Pages.Chat> Loc

@* This component hosts inputs and logic for composing messages *@

<div>
    @if (_file != null)
    {
        <MudPaper Style="margin-left: 1em; margin-right: 1em" Class="darkenedcard">
            <div class="file">
                <MudText Typo=(Typo.body1) Style="flex: 100% 0 1">@(Loc["send_file"]) @(getFileInfo())</MudText>
                <MudIconButton Variant="Variant.Filled"
                           Color="Color.Error"
                           Icon="@Icons.Filled.Cancel"
                           OnClick=@(() => clearFile()) />
            </div>
        </MudPaper>
    }
    <MudPaper Outlined=true>
        <MudToolBar Class="bottomtoolbar">
            <form onkeydown=@((KeyboardEventArgs e) => onKeyPress(e)) onsubmit=@(() => {}) class="maxflex">
                <InputFile id="fileInput" OnChange="onInputFileChanged" hidden accept=".jpg, .jpeg, .png, .pdf" />
                <MudIconButton HtmlTag="label"
                               Variant="Variant.Filled"
                               Color="Color.Primary"
                               Icon="@Icons.Filled.CloudUpload"
                               Disabled=@(_state != SendControlState.Ready)
                               for="fileInput" />
                <MudTextField Class="autoflex" @bind-Value="_newMessageBody" Immediate Lines=@(2) Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                @if (_queuedMessagesCount > 0)
                {
                    <MudBadge Content=@(_queuedMessagesCount) Color=@(Color.Warning)>
                        <MudIcon Icon=@(Icons.Filled.ScheduleSend)></MudIcon>
                    </MudBadge>
                }
                @if (_state == SendControlState.Sending)
                {
                    <MudProgressCircular Color=(Color.Primary) Indeterminate=true></MudProgressCircular>
                }
                else
                {
                    <MudIconButton Variant="Variant.Filled"
                               Icon=@(Icons.Filled.Send)
                               Color="Color.Primary"
                               OnClick=@(onSubmit)
                               Disabled="_state != SendControlState.Ready || (_file == null && string.IsNullOrEmpty(_newMessageBody))" />
                }
            </form>
        </MudToolBar>
    </MudPaper>
</div>