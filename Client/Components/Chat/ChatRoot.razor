@using BlazorChat.Client.Shared
@using BlazorChat.Shared
@using System.Text.Json
@inject Services.IChatApiService ChatApiService
@inject Services.IChatStateService ChatStateService
@inject Services.IChatHubService ChatHubService
@inject Services.ICallService CallService
@inject ISnackbar _Snackbar;
@inject IDialogService DialogService
@inject IStringLocalizer<Pages.Chat> Loc
@inject IJSRuntime _jsRuntime

@* This component renders the maincontent structure in chat mode *@

<PageTitle>@(Title())</PageTitle>
<MudLayout Class="restrictheight">
    <MudAppBar Color="Color.Surface" ToolBarClass="row_container gap">
        <MudIconButton Variant="Variant.Text" Icon="@Icons.Material.Filled.Chat" Color=_appbarButtonColor OnClick="@((_) => ToggleChannelList())" />
        <MudText Typo=@(Typo.h5) Class="maxflex">@(Title())</MudText>
        @if (_showInstallButton)
        {
            <MudButton Variant=@(Variant.Filled)
                   Color=@(Color.Primary)
                   StartIcon=@(Icons.Filled.Download)
                   Style="flex: 1 0 auto"
                   OnClick=@(displayInstallPrompt)>@Loc["install"]</MudButton>
        }
        <MudIconButton Variant="Variant.Text" Icon="@Icons.Material.Filled.Search" Color=_appbarButtonColor OnClick=@(openSearchDialog) Disabled=@(CurrentChannel == null) />
        <MudIconButton Variant="Variant.Text" Icon="@Icons.Material.Filled.People" Color=_appbarButtonColor OnClick="@((_) => ToggleUserList())" />
    </MudAppBar>
    <MudMainContent Class="restrictheight">
        <MudDrawerContainer Class="restrictheight">
            <MudDrawer @bind-Open="@_displayChannelList" Anchor="Anchor.Left" Class="shrinkdrawer">
                <ChannelList Params=(_channelListParams) OnChannelClicked=(ChannelList_OnChannelClicked)></ChannelList>
                <UserArea />
            </MudDrawer>
            <MudDrawer Anchor="Anchor.Right" Fixed="false" @bind-Open="@_displayUserList" Class="shrinkdrawer">
                <ChannelInfo Params=(_channelInfoParams) />
                <ParticipantList Params=(_userListParams) />
            </MudDrawer>

            <div class="maincontainer @(SubtractDrawerClasses())">
                <MessageList Params=(_messageListParams) OnTopVisible=attemptLoadOlderMessages OnBottomVisible=attemptLoadNewerMessages></MessageList>
                <SendControl Params=@(_sendControlParams) />
            </div>
        </MudDrawerContainer>
    </MudMainContent>
</MudLayout>

@code {
    [CascadingParameter]
    IThemeInfo? _themeInfo { get; set; }

    bool _displayChannelList = true;
    bool _displayUserList = true;

    void ToggleChannelList()
    {
        _displayChannelList = !_displayChannelList;
    }

    void ToggleUserList()
    {
        _displayUserList = !_displayUserList;
    }

    string SubtractDrawerClasses()
    {
        if (_displayChannelList && _displayUserList)
        {
            return "subtractdrawerboth";
        }
        else if (_displayChannelList)
        {
            return "subtractdrawerleft";
        }
        else if (_displayUserList)
        {
            return "subtractdrawerright";
        }
        return "";
    }

    string Title()
    {
        if (CurrentChannel != null)
        {
            return CurrentChannel.Name;
        }
        else
        {
            return $"BlazorChat";
        }
    }

    Color _appbarButtonColor => (_themeInfo?.IsDarkMode ?? false) ? Color.Primary : Color.Inherit;
}